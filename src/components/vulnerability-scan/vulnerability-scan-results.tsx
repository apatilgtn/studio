
"use client";

import type { SecurityVulnerabilityScanOutput } from "@/ai/flows/security-vulnerability-scan";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Icons } from "@/components/icons";
import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Badge } from "@/components/ui/badge";

interface VulnerabilityScanResultsProps {
  results: SecurityVulnerabilityScanOutput | null;
  isLoading: boolean;
  error: string | null;
}

export function VulnerabilityScanResults({ results, isLoading, error }: VulnerabilityScanResultsProps) {
  if (isLoading) {
    return (
      <Card className="mt-6 shadow-lg">
        <CardHeader>
          <CardTitle className="text-xl flex items-center gap-2">
            <Icons.Loader className="w-5 h-5 animate-spin text-primary" /> Scanning for Vulnerabilities...
          </CardTitle>
        </CardHeader>
        <CardContent>
          <p className="text-muted-foreground">The AI is analyzing the OpenAPI specification. This may take a moment.</p>
        </CardContent>
      </Card>
    );
  }

  if (error) {
    return (
      <Alert variant="destructive" className="mt-6">
        <Icons.AlertTriangle className="h-4 w-4" />
        <AlertTitle>Scan Error</AlertTitle>
        <AlertDescription>{error}</AlertDescription>
      </Alert>
    );
  }

  if (!results) {
    return null; // Or a message like "No scan performed yet."
  }

  const { vulnerabilities, recommendations } = results;

  return (
    <Card className="mt-6 shadow-xl">
      <CardHeader className="bg-primary/5">
        <CardTitle className="text-2xl flex items-center gap-2">
          <Icons.ShieldAlert className="w-7 h-7 text-primary" /> Security Scan Report
        </CardTitle>
        <CardDescription>
          AI-powered analysis of potential security vulnerabilities and recommendations.
        </CardDescription>
      </CardHeader>
      <CardContent className="pt-6 grid md:grid-cols-2 gap-6">
        <div>
          <h3 className="text-lg font-semibold mb-3 flex items-center gap-2">
            <Icons.AlertTriangle className="w-5 h-5 text-destructive" /> Identified Vulnerabilities
            <Badge variant="destructive" className="ml-auto">{vulnerabilities.length}</Badge>
          </h3>
          {vulnerabilities.length > 0 ? (
            <ScrollArea className="h-72 rounded-md border p-4 bg-muted/30">
              <ul className="space-y-3">
                {vulnerabilities.map((vuln, index) => (
                  <li key={index} className="text-sm p-3 bg-background rounded-md shadow-sm border border-destructive/50">
                    <p className="font-medium text-destructive-foreground bg-destructive px-2 py-1 rounded-t-md -mx-3 -mt-3 mb-2 text-xs">Vulnerability #{index+1}</p>
                    {vuln}
                  </li>
                ))}
              </ul>
            </ScrollArea>
          ) : (
            <Alert>
              <Icons.CheckCircle2 className="h-4 w-4" />
              <AlertTitle>No Vulnerabilities Found</AlertTitle>
              <AlertDescription>The AI scan did not identify any specific vulnerabilities based on the provided criteria.</AlertDescription>
            </Alert>
          )}
        </div>
        <div>
          <h3 className="text-lg font-semibold mb-3 flex items-center gap-2">
            <Icons.Settings className="w-5 h-5 text-green-600" /> Recommendations
            <Badge variant="default" className="ml-auto bg-green-600 hover:bg-green-700 text-white">{recommendations.length}</Badge>
          </h3>
          {recommendations.length > 0 ? (
            <ScrollArea className="h-72 rounded-md border p-4 bg-muted/30">
              <ul className="space-y-3">
                {recommendations.map((rec, index) => (
                  <li key={index} className="text-sm p-3 bg-background rounded-md shadow-sm border border-green-500/50">
                     <p className="font-medium text-white bg-green-600 px-2 py-1 rounded-t-md -mx-3 -mt-3 mb-2 text-xs">Recommendation #{index+1}</p>
                    {rec}
                  </li>
                ))}
              </ul>
            </ScrollArea>
          ) : (
            <Alert>
              <Icons.Info className="h-4 w-4" />
              <AlertTitle>No Specific Recommendations</AlertTitle>
              <AlertDescription>The AI scan did not provide specific recommendations at this time.</AlertDescription>
            </Alert>
          )}
        </div>
      </CardContent>
    </Card>
  );
}
